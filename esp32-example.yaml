substitutions:
  name: "hewalex"
  friendly_name: Hewalex
  tx_pin: GPIO01
  rx_pin: GPIO03
  rx_timeout: 150ms

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: dev

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  baud_rate: 0

    
# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

# Allow provisioning Wi-Fi via serial
# improv_serial:

wifi:
  # Set up a wifi access point
  ap: {}

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

# To have a "next url" for improv serial
# web_server:
#   port: 80

external_components:
  - source: components

uart:
    baud_rate: 38400
    tx_pin: ${tx_pin}
    rx_pin: ${rx_pin}
    
  
hewalex_g422:
  - id: g422_0   
    update_interval: 2s
    rx_timeout: ${rx_timeout}


sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s
  - platform: hewalex_g422
    hewalex_g422_id: g422_0
    temperature_1:
      name: "Collector temp (T1)" 
    temperature_2:
      name: "Buffer bottom temp (T2)"   
    temperature_3:
      name: "Backflow temp (T3)"  
    temperature_4:
      name: "Buffer top temp (T4)" 
    temperature_5:
      name: "T5 (Boiler outlet temp)" 
    temperature_6:
      name: "T6 ()" 
    collector_power:
      name: "Collector Power"
      id: hewalex_power
    consumption_w:  
      name: "Consumption"
      id: hewalex_consumption
    flow_rate:
      name: "Flow Rate (l/min)"
      unit_of_measurement: "l/min"
    collector_pump_speed:
      name: "Collector Pump Speed (0-15)" 
    total_energy_kwh:
      name: "Collector Total Energy"
      id: total_energy_kwh 
      internal: true
    collector_pump_on:
      name: "Collector Pump (P) ON (1/0)"
      internal: true
    boiler_pump_on:
      name: "Boiler Pump (K) ON (1/0)"
      internal: true
    circulation_pump_on:
      name: "Circulation Pump (C) ON (1/0)"
      internal: true
    collector_active:  
      name: "Collector Active (1/0)"
      internal: true

  - platform: total_daily_energy
    name: "Today's Energy"
    power_id: hewalex_power  # Collector power sensor ID
    unit_of_measurement: "kWh"
    accuracy_decimals: 2
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001

  - platform: total_daily_energy  # For HA energy statistics dashboard
    name: "Consumption Today"
    device_class: energy
    state_class: total_increasing
    power_id: hewalex_consumption  # Collector consumption sensor ID
    unit_of_measurement: "kWh"
    accuracy_decimals: 2
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001

  - platform: template
    name: "Collector Total Energy Adjusted" # Output actual energy
    device_class: energy
    state_class: total_increasing
    id: total_energy
    lambda: |-
      return id(total_energy_kwh).state + 6553.6;
    unit_of_measurement: "kWh"
    
# Enable time component to reset energy at midnight  
time:
  - platform: homeassistant
    id: hewalex_time


binary_sensor:
  - platform: template
    name: "Collector Pump"
    lambda: |-
      return (id(g422_0).get_collector_pump_state() == 1);
    device_class: power

  - platform: template
    name: "Boiler Pump"
    lambda: |-
      return (id(g422_0).get_boiler_pump_state() == 1);
    device_class: power

  - platform: template
    name: "Circulation Pump"
    lambda: |-
      return (id(g422_0).get_circulation_pump_state() == 1);
    device_class: power

  - platform: template
    name: "Collector active"
    lambda: |-
      return (id(g422_0).get_collector_active_state() == 1);
    device_class: power
